// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ResTIConnect.Infra.Data.Context;

#nullable disable

namespace ResTIConnect.Infra.Data.Migrations
{
    [DbContext(typeof(ResTIConnectContext))]
    partial class ResTIConnectContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("EventosSistemas", b =>
                {
                    b.Property<int>("EventosEventoId")
                        .HasColumnType("int");

                    b.Property<int>("SistemasSistemaId")
                        .HasColumnType("int");

                    b.HasKey("EventosEventoId", "SistemasSistemaId");

                    b.HasIndex("SistemasSistemaId");

                    b.ToTable("EventosSistemas");
                });

            modelBuilder.Entity("PerfisUser", b =>
                {
                    b.Property<int>("PerfisPerfilId")
                        .HasColumnType("int");

                    b.Property<int>("UsersUserId")
                        .HasColumnType("int");

                    b.HasKey("PerfisPerfilId", "UsersUserId");

                    b.HasIndex("UsersUserId");

                    b.ToTable("PerfisUser");
                });

            modelBuilder.Entity("ResTIConnect.Domain.Entities.Enderecos", b =>
                {
                    b.Property<int>("EnderecoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Bairro")
                        .HasColumnType("longtext");

                    b.Property<string>("Cep")
                        .HasColumnType("longtext");

                    b.Property<string>("Cidade")
                        .HasColumnType("longtext");

                    b.Property<string>("Complemento")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTimeOffset?>("DateDeleted")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTimeOffset?>("DateUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Estado")
                        .HasColumnType("longtext");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Numero")
                        .HasColumnType("longtext");

                    b.Property<string>("Pais")
                        .HasColumnType("longtext");

                    b.HasKey("EnderecoId");

                    b.ToTable("Enderecos", (string)null);
                });

            modelBuilder.Entity("ResTIConnect.Domain.Entities.Eventos", b =>
                {
                    b.Property<int>("EventoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Codigo")
                        .HasColumnType("longtext");

                    b.Property<string>("Conteudo")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("DataHoraOcorrencia")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTimeOffset?>("DateDeleted")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTimeOffset?>("DateUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Tipo")
                        .HasColumnType("longtext");

                    b.HasKey("EventoId");

                    b.ToTable("Eventos", (string)null);
                });

            modelBuilder.Entity("ResTIConnect.Domain.Entities.Perfis", b =>
                {
                    b.Property<int>("PerfilId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTimeOffset?>("DateDeleted")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTimeOffset?>("DateUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Permissoes")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("PerfilId");

                    b.ToTable("Perfis", (string)null);
                });

            modelBuilder.Entity("ResTIConnect.Domain.Entities.Sistemas", b =>
                {
                    b.Property<int>("SistemaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("DataHoraInicioIntegracao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTimeOffset?>("DateDeleted")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTimeOffset?>("DateUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("EnderecoEntrada")
                        .HasColumnType("longtext");

                    b.Property<string>("EnderecoSaida")
                        .HasColumnType("longtext");

                    b.Property<string>("Protocolo")
                        .HasColumnType("longtext");

                    b.Property<string>("Status")
                        .HasColumnType("longtext");

                    b.Property<string>("Tipo")
                        .HasColumnType("longtext");

                    b.HasKey("SistemaId");

                    b.ToTable("Sistemas", (string)null);
                });

            modelBuilder.Entity("ResTIConnect.Domain.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTimeOffset?>("DateDeleted")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTimeOffset?>("DateUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<int?>("EnderecoId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<string>("Telefone")
                        .HasColumnType("longtext");

                    b.HasKey("UserId");

                    b.HasIndex("EnderecoId")
                        .IsUnique();

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("SistemasUser", b =>
                {
                    b.Property<int>("SistemasSistemaId")
                        .HasColumnType("int");

                    b.Property<int>("UsersUserId")
                        .HasColumnType("int");

                    b.HasKey("SistemasSistemaId", "UsersUserId");

                    b.HasIndex("UsersUserId");

                    b.ToTable("SistemasUser");
                });

            modelBuilder.Entity("EventosSistemas", b =>
                {
                    b.HasOne("ResTIConnect.Domain.Entities.Eventos", null)
                        .WithMany()
                        .HasForeignKey("EventosEventoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ResTIConnect.Domain.Entities.Sistemas", null)
                        .WithMany()
                        .HasForeignKey("SistemasSistemaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PerfisUser", b =>
                {
                    b.HasOne("ResTIConnect.Domain.Entities.Perfis", null)
                        .WithMany()
                        .HasForeignKey("PerfisPerfilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ResTIConnect.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UsersUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ResTIConnect.Domain.Entities.User", b =>
                {
                    b.HasOne("ResTIConnect.Domain.Entities.Enderecos", "Endereco")
                        .WithOne()
                        .HasForeignKey("ResTIConnect.Domain.Entities.User", "EnderecoId");

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("SistemasUser", b =>
                {
                    b.HasOne("ResTIConnect.Domain.Entities.Sistemas", null)
                        .WithMany()
                        .HasForeignKey("SistemasSistemaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ResTIConnect.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UsersUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
